{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7114a2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyBLyhke55iBfY4TFajdoSzZaCK7D8ZX_vs\",\n//     authDomain: \"nwitter-7e49f.firebaseapp.com\",\n//     projectId: \"nwitter-7e49f\",\n//     storageBucket: \"nwitter-7e49f.appspot.com\",\n//     messagingSenderId: \"465951404655\",\n//     appId: \"1:465951404655:web:e3728237d08c3a3f5d139a\"\n//   };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useEffect, useState } from 'react';\nimport {authService} from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\") {\n            setEmail(value);\n        } else if( name === \"password\") {\n            setPassword(value);\n        }\n        console.log(event.target.name);\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                //create account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword (email, password);\n            }\n        } catch(error) {\n            setError(error.message);\n        }\n    };\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"}/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\" }</span>\n        </>\n    )\n};\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async(event) => {\n        const {target:{name}} = event;\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    }\n    return (\n        <div className=\"authContainer \">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30}}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button name=\"google\" className=\"authBtns\" onClick={onSocialClick}>Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n                <button name=\"github\" className=\"authBtns\" onClick={onSocialClick}>Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n            </div>\n        </div>\n    );\n}\n\nexport default Auth;","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async() => {\n        // confirm만 쳐서 나오는 에러는 window를 붙여준다\n        const ok = window.confirm(\"r u sure?\");\n        console.log(ok);\n        if(ok) {\n            //delete ( user 지우는 방법 )\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            // refFromUrl함수로 delete할수도 있다.\n            // reference는 진짜 중요하다\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        console.log(nweetObj, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNweet,\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {target:{value},} = event;\n        setNewNweet(value);\n    }\n    return(\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input type=\"text\" placeholder=\"edit ur nweet\" value={newNweet} required onChange={onChange} className=\"formInput\"/>\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n                        </form>\n                        <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\n                    </>\n                ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\n                        {isOwner && (\n                            <div class=\"nweet__actions\">\n                                <span onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></span>\n                                <span onClick={toggleEditing}><FontAwesomeIcon icon={faPencilAlt} /></span>\n                            </div>\n                        )}\n                    </>\n                )\n            }\n        </div>\n    )\n};\n\nexport default Nweet;","import React, { useState } from 'react';\nimport {v4 as uuidv4} from \"uuid\";\nimport {dbService, storageService} from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        // collection이랑  ref.child랑 비슷\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }    \n        const nweetObj = {\n            text:nweet, // state의 nweet랑 같은 거니까 이렇게 둬도 된다\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {target:{files}}= event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        };\n        if(Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n<form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from 'components/Nweet';\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    // const getNNweets = async() => {   \n    //     const dbNweets = await dbService.collection(\"nweets\").get();\n    //     // 이 부분이 realTime\n    //     dbNweets.forEach((document) => {\n    //         const nweetObject = {\n    //             ...document.data(),\n    //             id:document.id,  \n    //         };\n    //         setNweets(prev => [nweetObject, ...prev]);\n    //     });\n    // }\n    useEffect(() => {\n        // 새로고침 + CRUD할때마다 업로드\n        dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => {\n            const nweetArray =  snapshot.docs.map(doc => ({id:doc.id, ...doc.data(), }));\n            setNweets(nweetArray);\n        })\n    }, []);\n    \n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{marginTop:30}}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    // useEffect(() => {\n    //     const getMyNweets = async() => {\n    //         const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    //         console.log(nweets.docs.map(doc => doc.data()));\n    //     }\n    // });\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n    return (\n    <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName } autoFocus className=\"formInput\" />\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop:10}}/>\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n    </div>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({refreshUser , isLoggedIn , userObj }) => {\n    // useState의 값이 false면 auth고 true면 home page가 나타나게 된다\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div style={{maxWidth:890, width:\"100%\", margin: \"0 auto\", marginTop:80, display:\"flex\", justifyContent: \"center\"}}>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                        {/* redirect 하는방법 */}\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\n                    </div> \n                    ) : ( \n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route> \n                        {/* redirect 하는방법 */}\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\n                    </>\n                )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\n\n//user가 있는지 확인하는 코드 authService.currentUser\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // for logging out\n        setUserObj(null); \n      }\n      setInit(true);\n    });\n  }, []);\n  // 이 함수는 새로고침의 역할을 할것이다\n  const refreshUser = () => {\n    const user = authService.currentUser; \n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init ? (<AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />) : (\"Initializing...\")}\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}