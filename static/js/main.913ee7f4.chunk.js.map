{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qRA8BeA,MAzBf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OAAO,sBAAKC,UAAU,QAAf,UACP,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACjC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,WAIjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,aCoCGC,G,kNA/CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAIX,EAAKM,SAAS,CAAEN,SAAQD,WAAY,IAP1B,2C,uDASZ,WACEQ,KAAKN,c,oBAEP,WAAU,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,2BAGA,qBAAKA,UAAU,SAAf,SAEEU,EAAOP,KAAI,SAAAe,GAAK,OACd,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GAhCXE,IAAMC,YCDxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.913ee7f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// 인자를 { } 로 감싸지 않으면 화면에 표시가 안됨\nfunction Movie({ year, title, summary, poster, genres}) {\n    return <div className=\"movie\">\n    <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"genres\"> \n                {genres.map((genre, index) => ( \n                    <li key={index} className=\"genres__genre\">{genre}</li>\n                ))} \n            </ul>\n        </div>\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n    </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true, \n    movies: []\n  };\n\n  // axios는 느리기 때문에 비동기로 만들어줄 필ㅇ가 있다. async -> await\n  getMovies = async() => {\n    const { // es6 syntax\n      data: { // 이렇게 나타내는건 console을 찍어보고 어느 지점에서 movie data가 있는지 확인하고 한것\n        data: {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    //console.log(movies); \n    this.setState({ movies, isLoading : false });\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state; // es6 문법\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading... </span>\n          </div>\n          ) : (\n            <div className=\"movies\">\n              {            \n              movies.map(movie => ( \n                <Movie \n                  key={movie.id}  \n                  id={movie.id} \n                  year={movie.year} \n                  title={movie.title} \n                  summary={movie.summary} \n                  poster={movie.medium_cover_image} \n                  genres={movie.genres}\n                />        \n              ))}\n            </div>\n          )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}